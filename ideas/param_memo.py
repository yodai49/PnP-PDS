
#   Experiment A(Gaussian noise)    
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='dncnn_color_blind', deg_op = 'blur', method = 'comparisonA-7', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='dncnn_15', deg_op = 'blur', method = 'comparisonA-7', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 1200, gamma1 = 0.05, gamma2 = 19, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='dncnn_15', deg_op = 'blur', method = 'comparisonC-4', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'ours-A', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'ours-A', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'ours-A', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.99, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-A', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.99, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-A', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.99, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-A', ch = 3)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1.99, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1.99, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.25, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.3, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.3, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-1', ch = 3)


#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0, myLambda=0.1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-4', ch = 3)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.2, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-6', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.4, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-6', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.99, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1.2, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-6', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=2.6, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-6', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1.3, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-6', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.99, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1.2, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-6', ch = 3)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.0005, gamma2 = 1980, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-2', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.001, gamma2 = 990, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-2', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.003, gamma2 = 330, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonA-2', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.0005, gamma2 = 1980, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-2', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.001, gamma2 = 990, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-2', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.0, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 0.003, gamma2 = 330, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonA-2', ch = 3)

#    Experiment B (mixed Gaussian and sparse noise)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.49, r=1, alpha_n = 0.8, alpha_s = 0.99, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'ours-B', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'ours-B', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'ours-B', ch = 3)

#x    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.98, alpha_s = 0.9, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-B', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.98, alpha_s = 1.1, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-B', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.98, alpha_s = 1.3, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-B', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 3000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-B', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 3000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'ours-B', ch = 3)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.1, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.1, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-1', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 1, gamma2 = 0.1, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-1', ch = 3)

#x   psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-1', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-1', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-1', ch = 3)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-2', ch = 3, m1=35, m2=5, gammaInADMMStep1=10)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-2', ch = 3, m1=35, m2=5, gammaInADMMStep1=10)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-2', ch = 3, m1=35, m2=5, gammaInADMMStep1=10)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.1, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-3', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.1, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-3', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.1, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-3', ch = 3)

#x    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-3', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-3', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-3', ch = 3)

#    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=1.5, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.75, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-4', ch = 3)
#    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 1200, gamma1 = 0.99, gamma2 = 0.49, r=1, alpha_n = 0.95, alpha_s = 0.95, myLambda=0.375, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'blur', method = 'comparisonB-4', ch = 3)

#x    psnr = eval_restoration(gaussian_nl=0.005, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-4', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.01, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-4', ch = 3)
#x    psnr = eval_restoration(gaussian_nl=0.02, sp_nl=0.1, poisson_noise=False, poisson_alpha = 0, max_iter = 6000, gamma1 = 1, gamma2 = 0.49, r=0.8, alpha_n = 0.95, alpha_s = 0.95, myLambda=0, result_output=False, architecture='DnCNN_nobn_nch_3_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonB-4', ch = 3)


#    Experiment C (Poisson noise)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 1200, gamma1 = 0.00055, gamma2 = 1786, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'ours-C', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 1200, gamma1 = 0.0006, gamma2 = 1 / 0.0006, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'ours-C', ch = 1) # gamma1　この辺
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 1200, gamma1 = 0.01, gamma2 = 99, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'comparisonC-1', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 1200, gamma1 = 0.008, gamma2 = 99, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'comparisonC-1', ch = 1) # gamma2　これより大きい方を探索
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 1200, gamma1 = 0.0005, gamma2 = 1999, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.025, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'comparisonC-2', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 1200, gamma1 = 0, gamma2 = 1999, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.185, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'comparisonC-2', ch = 1, m1=50, gammaInADMMStep1=1) 
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 1200, gamma1 = 0.021, gamma2 = 1000, r=1, alpha_n = 0.9, alpha_s = 0.95, m1 = 25, m2 = 10, myLambda=0.03, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'comparisonC-3', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 1200, gamma1 = 0.2, gamma2 = 1999, r=1, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.02, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'blur', method = 'comparisonC-3', ch = 1, m2=25) 

#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 3000, gamma1 = 0.00035, gamma2 = 1 / 0.00035, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'ours-C', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 3000, gamma1 = 0.00034, gamma2 = 2940, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'ours-C', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 3000, gamma1 = 0.005, gamma2 = 99, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonC-1', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 3000, gamma1 = 0.004, gamma2 = 99, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=1, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonC-1', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 3000, gamma1 = 0.0005, gamma2 = 1999, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.03, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonC-2', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 3000, gamma1 = 0.0005, gamma2 = 1999, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.3, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonC-2', ch = 1, m1=100, gammaInADMMStep1=1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 300, max_iter = 3000, gamma1 = 0.065, gamma2 = 9, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.03, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonC-3', ch = 1)
#    psnr = eval_restoration(gaussian_nl=0.00, sp_nl=0.0, poisson_noise=True, poisson_alpha = 100, max_iter = 3000, gamma1 = 0.85, gamma2 = 1999, r=0.5, alpha_n = 0.9, alpha_s = 0.95, myLambda=0.5, result_output=False, architecture='DnCNN_nobn_nch_1_nlev_0.01', deg_op = 'random_sampling', method = 'comparisonC-3', ch = 1, m1 = 10, m2=10, gammaInADMMStep1=1)

# (C unstable DnCNN)     experiment_data_list.append ({'settings' : {'gaussian_nl' : 0, 'sp_nl' : 0, 'poisson_noise' : True, 'poisson_alpha' : 300}, 'method' : {'method' : 'C-PnP-unstable-DnCNN', 'max_iter' : 300, 'gamma1' :  0.001, 'gamma2' : 999, 'myLambda' : 1, 'architecture' : 'dncnn_15'}, 'configs' : {'ch' : 1}})

#    python test.py --max_iter=2000 --gamma1=0.49 --gamma2=0.99 --gaussian_nl=0.01 --sp_nl=0.0 --architecture=preDnCNN_nobn_nch_3_nlev_0.01 --alpha_n=0.95 --method=comparisonC-1 --r=0.7 --deg_op=random_sampling